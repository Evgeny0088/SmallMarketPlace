version: "3.3"
services:
  registry-service:
    build:
      context: ./SmallMarketPlaceServiceRegistry
      dockerfile: Dockerfile
    container_name: registry-service
    ports:
      - "8761:8761"
    restart: always
    networks:
      - proxynet
      
  config-service:
    build:
      context: ./config-service
      dockerfile: Dockerfile
    container_name: config-service
    ports:
      - "9000:9000"
    environment:
      eureka.client.serviceUrl.defaultZone: http://registry-service:8761/eureka/
      spring.cloud.config.server.git.uri: https://github.com/Evgeny0088/marketplaceConfigServer
    restart: always
    depends_on:
      - registry-service
    networks:
      - proxynet

  gateway-service:
    build:
      context: ./APIgateway
      dockerfile: Dockerfile
    container_name: gateway-service
    ports:
      - "8080:8080"
    environment:
      spring.cloud.config.uri: http://config-service:9000
      eureka.client.serviceUrl.defaultZone: http://registry-service:8761/eureka/
    restart: always
    depends_on:
      - config-service
      - registry-service
    networks:
      - proxynet

  itemstorage-service:
    build:
      context: ./ItemStorageService
      dockerfile: Dockerfile
    container_name: itemstorage-service
    ports:
      - "8081:8081"
    environment:
      spring.zipkin.base-url: http://zipkin-server:9411
      spring.cloud.config.uri: http://config-service:9000
      spring.kafka.bootstrap-servers: http://kafka:29092
      eureka.client.serviceUrl.defaultZone: http://registry-service:8761/eureka/
      spring.datasource.url: jdbc:postgresql://itemstorageDB:5432/itemstorage?serverTimezone=UTC&createDatabaseIfNotExist=true&autoReconnect=true&allowPublicKeyRetrieval=true&useSSL=false
    restart: always
    depends_on:
      - config-service
      - registry-service
    networks:
      - proxynet

  saleorders-service:
    build:
      context: ./SaleOrdersService
      dockerfile: Dockerfile
    container_name: saleorders-service
    ports:
      - "8082:8082"
    environment:
      spring.zipkin.base-url: http://zipkin-server:9411
      spring.kafka.bootstrap-servers: http://kafka:29092
      spring.cloud.config.uri: http://config-service:9000
      eureka.client.serviceUrl.defaultZone: http://registry-service:8761/eureka/
      spring.datasource.url: jdbc:postgresql://saleordersDB:5432/saleorders?serverTimezone=UTC&createDatabaseIfNotExist=true&autoReconnect=true&allowPublicKeyRetrieval=true&useSSL=false
    restart: always
    depends_on:
      - config-service
      - registry-service
    networks:
      - proxynet

networks:
  proxynet:
    external:
      name: docker_proxynet

