plugins {
    id 'idea'
    id 'java'
    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

group = 'com.marketplace'
version = '1.0'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.1")
}

dependencies {
    // starters
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-config-server'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.mattunderscore:filter-utils:0.2.8'
    implementation 'org.springframework.cloud:spring-cloud-sleuth-zipkin'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:2.6.4'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    implementation 'redis.clients:jedis'

    // dev tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    // kafka
    implementation 'org.springframework.kafka:spring-kafka:2.8.3'
    //lombok
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok'
    // database
    implementation 'org.liquibase:liquibase-core'
    implementation "org.hibernate:hibernate-gradle-plugin:5.6.2.Final"
    implementation 'org.postgresql:postgresql'
    // cache
    implementation 'org.ehcache:ehcache'
    // logging
    implementation 'ch.qos.logback:logback-classic'
    // swagger
    implementation "org.springdoc:springdoc-openapi-ui:1.6.6"
    // testing
    testImplementation "org.testcontainers:kafka:1.16.3"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "org.junit.jupiter:junit-jupiter-engine"
    testImplementation "org.junit.jupiter:junit-jupiter-params"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

//######### JAR TASKS ##########

var service_version = '1.0'
var jar_name = 'saleorders-service'

task SaleOrdersShadow(type: Jar, dependsOn: shadowJar) {
    archiveBaseName.set("${jar_name}-shadowJar")
    archiveVersion.set("${service_version}")
    manifest {
        attributes 'Main-Class': 'com.marketplace.orders.SaleOrdersServiceApplication.java'
    }
    from zipTree(shadowJar.archiveFile)
}

bootJar {
    archiveFileName.set("${jar_name}-boot-${service_version}.jar")
}

tasks.build.dependsOn tasks.SaleOrdersShadow

tasks.named('test') {
    useJUnitPlatform()
}